{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Action": [
                "ec2:CreateImage",
                "ec2:CopyImage",
                "ec2:CreateSnapshot",
                "ec2:CopySnapshot",
                "ec2:CreateTags",
                "ec2:DeleteSnapshot",
                "ec2:DeleteTags",
                "ec2:DeleteVolume",
                "ec2:DeregisterImage",
                "ec2:ModifyImageAttribute",
                "ec2:ModifySnapshotAttribute",
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:TerminateInstances"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "EC2MandatoryRA"
        },
        {
            "Action": [
                "rds:AddTagsToResource",
                "rds:CreateDBSnapshot",
                "rds:CopyDBSnapshot",
                "rds:DeleteDBSnapshot",
                "rds:ModifyDBSnapshot",
                "rds:ModifyDBSnapshotAttribute",
                "rds:StopDBInstance",
                "rds:StartDBInstance",
                "rds:RemoveTagsFromResource",
                "rds:StartDBCluster",
                "rds:StopDBCluster",
                "rds:ModifyDBClusterSnapshotAttribute",
                "rds:CopyDBClusterSnapshot",
                "rds:DeleteDBCluster",
                "rds:DeleteDBClusterSnapshot",
                "rds:DeleteDBInstance"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "RDSMandatoryRA"
        },
        {
            "Action": [
                "elasticloadbalancing:DeleteLoadBalancer"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "ELBMandatoryRA"
        },
        {
            "Action": [
                "autoscaling:DeleteAutoScalingGroup",
                "autoscaling:DeleteLaunchConfiguration"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "AutoScalingMandatoryRA"
        },
        {
            "Action": [
                "ssm:ListInstanceAssociations",
                "ssm:ListResourceDataSync",
                "ssm:ListDocuments",
                "ssm:ListInventoryEntries",
                "ssm:ListDocumentVersions",
                "ssm:ListAssociations"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "SSMMandatory"
        },
        {
            "Action": [
                "config:Describe*",
                "config:DescribeConfigRules",
                "config:GetComplianceDetailsByConfigRule",
                "config:DescribeConfigurationRecorders",
                "config:DescribeConfigurationRecorderStatus",
                "config:DescribeDeliveryChannels"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "ConfigMandatory"
        },
        {
            "Action": [
                "sns:ListTopics",
                "sns:GetTopicAttributes",
                "sns:ListSubscriptionsByTopic",
                "sns:GetTopicAttributes",
                "sns:GetSubscriptionAttributes"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "SNSMandatory"
        },
        {
            "Action": [
                "sqs:ListQueues",
                "sqs:GetQueueAttributes"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "SQSMandatory"
        },
        {
            "Action": [
                "kinesis:GetShardIterator",
                "kinesis:DescribeStream",
                "kinesis:ListStreams"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "KinesisMandatory"
        },
        {
            "Action": [
                "lambda:ListFunctions",
                "lambda:ListTags"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "LambdaMandatory"
        },
        {
            "Action": [
                "storagegateway:List*",
                "storagegateway:Describe*"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "StoragegatewayMandatory"
        },
        {
            "Action": [
                "ses:GetIdentityDkimAttributes",
                "ses:GetIdentityVerificationAttributes",
                "ses:GetSendQuota",
                "ses:ListIdentities",
                "ses:GetSendStatistics"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "SESMandatory"
        },
        {
            "Action": [
                "dynamodb:ListTables",
                "dynamodb:DescribeTable",
                "dynamodb:ListTagsOfResource"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "DynamoDBMandatory"
        },
        {
            "Action": [
                "cloudformation:ListStackResources",
                "cloudformation:GetStackPolicy",
                "cloudformation:DescribeStacks",
                "cloudformation:GetTemplate"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "CloudFormationMandatory"
        },
        {
            "Action": [
                "cloudfront:GetDistributionConfig",
                "cloudfront:GetStreamingDistributionConfig",
                "cloudfront:List*"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "CloudFrontMandatory"
        },
        {
            "Action": [
                "cloudhsm:List*",
                "cloudhsm:Describe*"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "CloudHSMMandatory"
        },
        {
            "Action": [
                "datapipeline:ListPipelines",
                "datapipeline:DescribePipelines",
                "datapipeline:GetPipelineDefinition"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "DataPipelineMandatory"
        },
        {
            "Action": [
                "directconnect:DescribeConnections",
                "directconnect:DescribeVirtualInterfaces",
                "directconnect:DescribeLocations"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "DirectConnectMandatory"
        },
        {
            "Action": [
                "elasticfilesystem:DescribeTags",
                "elasticfilesystem:DescribeFileSystems"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "ElasticFileSystemMandatory"
        },
        {
            "Action": [
                "route53:ListHostedZones",
                "route53:ListHealthChecks",
                "route53:ListResourceRecordSets"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "Route53Mandatory"
        },
        {
            "Action": [
                "workspaces:DescribeWorkspaceDirectories",
                "workspaces:DescribeWorkspaceBundles",
                "workspaces:DescribeWorkspaces"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "WorkspacesMandatory"
        },
        {
            "Action": [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "ACMMandatory"
        }
    ]
}